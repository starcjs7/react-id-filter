{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wfsk1\\\\Desktop\\\\job_description\\\\front-end\\\\src\\\\Components\\\\RandomWheel\\\\randomWheel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Wheel } from 'react-custom-roulette';\nimport './randomWheel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = [{\n  option: '0',\n  style: {\n    backgroundColor: 'green',\n    textColor: 'black'\n  }\n}, {\n  option: '1',\n  style: {\n    backgroundColor: 'white'\n  }\n}, {\n  option: '2'\n}];\n\nconst RandomWheel = () => {\n  _s();\n\n  const [mustSpin, setMustSpin] = useState(false);\n  const [prizeNumber, setPrizeNumber] = useState(0);\n\n  const handleSpinClick = () => {\n    const newPrizeNumber = Math.floor(Math.random() * data.length);\n    setPrizeNumber(newPrizeNumber);\n    setMustSpin(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Wheel, {\n      mustStartSpinning: mustSpin,\n      prizeNumber: prizeNumber,\n      data: data,\n      onStopSpinning: e => {\n        setMustSpin(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSpinClick,\n      children: \"SPIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RandomWheel, \"58vZrOuB/e+QvyhPdLKQFzmUZcU=\");\n\n_c = RandomWheel;\nexport default RandomWheel;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomWheel\");","map":{"version":3,"sources":["C:/Users/wfsk1/Desktop/job_description/front-end/src/Components/RandomWheel/randomWheel.js"],"names":["React","useState","Wheel","data","option","style","backgroundColor","textColor","RandomWheel","mustSpin","setMustSpin","prizeNumber","setPrizeNumber","handleSpinClick","newPrizeNumber","Math","floor","random","length","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,IAAI,GAAG,CACT;AAAEC,EAAAA,MAAM,EAAE,GAAV;AAAeC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,eAAe,EAAE,OAAnB;AAA4BC,IAAAA,SAAS,EAAE;AAAvC;AAAtB,CADS,EAET;AAAEH,EAAAA,MAAM,EAAE,GAAV;AAAeC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,eAAe,EAAE;AAAnB;AAAtB,CAFS,EAGT;AAAEF,EAAAA,MAAM,EAAE;AAAV,CAHS,CAAb;;AAMA,MAAMI,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMY,eAAe,GAAG,MAAM;AAC1B,UAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBd,IAAI,CAACe,MAAhC,CAAvB;AACAN,IAAAA,cAAc,CAACE,cAAD,CAAd;AACAJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAJD;;AAMA,sBACI;AAAA,4BACI,QAAC,KAAD;AACI,MAAA,iBAAiB,EAAED,QADvB;AAEI,MAAA,WAAW,EAAEE,WAFjB;AAGI,MAAA,IAAI,EAAER,IAHV;AAII,MAAA,cAAc,EAAGgB,CAAD,IAAO;AACnBT,QAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AANL;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAQ,MAAA,OAAO,EAAEG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAaH,CAvBD;;GAAML,W;;KAAAA,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Wheel } from 'react-custom-roulette'\r\nimport './randomWheel.css'\r\n\r\nconst data = [\r\n    { option: '0', style: { backgroundColor: 'green', textColor: 'black' } },\r\n    { option: '1', style: { backgroundColor: 'white' } },\r\n    { option: '2' },\r\n]\r\n\r\nconst RandomWheel = () => {\r\n    const [mustSpin, setMustSpin] = useState(false);\r\n    const [prizeNumber, setPrizeNumber] = useState(0);\r\n\r\n    const handleSpinClick = () => {\r\n        const newPrizeNumber = Math.floor(Math.random() * data.length)\r\n        setPrizeNumber(newPrizeNumber)\r\n        setMustSpin(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Wheel\r\n                mustStartSpinning={mustSpin}\r\n                prizeNumber={prizeNumber}\r\n                data={data}\r\n                onStopSpinning={(e) => {\r\n                    setMustSpin(false)\r\n                }}\r\n            />\r\n            <button onClick={handleSpinClick}>SPIN</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RandomWheel;"]},"metadata":{},"sourceType":"module"}