{"ast":null,"code":"// import React from 'react';\n// import $ from 'jquery';\n// // VERSION: 2.3 LAST UPDATE: 11.07.2013\n// /*\n//  * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php\n//  *\n//  * Made by Wilq32, wilq32@gmail.com, Wroclaw, Poland, 01.2009\n//  * Website: http://jqueryrotate.com\n//  */\n// const JqueryRotate = () => {\n//     (function ($) {\n//         var supportedCSS, supportedCSSOrigin, styles = document.getElementsByTagName(\"head\")[0].style, toCheck = \"transformProperty WebkitTransform OTransform msTransform MozTransform\".split(\" \");\n//         for (var a = 0; a < toCheck.length; a++) if (styles[toCheck[a]] !== undefined) { supportedCSS = toCheck[a]; }\n//         if (supportedCSS) {\n//             supportedCSSOrigin = supportedCSS.replace(/[tT]ransform/, \"TransformOrigin\");\n//             if (supportedCSSOrigin[0] == \"T\") supportedCSSOrigin[0] = \"t\";\n//         }\n//         // Bad eval to preven google closure to remove it from code o_O\n//         eval('IE = \"v\"==\"\\v\"');\n//         jQuery.fn.extend({\n//             rotate: function (parameters) {\n//                 if (this.length === 0 || typeof parameters == \"undefined\") return;\n//                 if (typeof parameters == \"number\") parameters = { angle: parameters };\n//                 var returned = [];\n//                 for (var i = 0, i0 = this.length; i < i0; i++) {\n//                     var element = this.get(i);\n//                     if (!element.Wilq32 || !element.Wilq32.PhotoEffect) {\n//                         var paramClone = $.extend(true, {}, parameters);\n//                         var newRotObject = new Wilq32.PhotoEffect(element, paramClone)._rootObj;\n//                         returned.push($(newRotObject));\n//                     }\n//                     else {\n//                         element.Wilq32.PhotoEffect._handleRotation(parameters);\n//                     }\n//                 }\n//                 return returned;\n//             },\n//             getRotateAngle: function () {\n//                 var ret = [0];\n//                 for (var i = 0, i0 = this.length; i < i0; i++) {\n//                     var element = this.get(i);\n//                     if (element.Wilq32 && element.Wilq32.PhotoEffect) {\n//                         ret[i] = element.Wilq32.PhotoEffect._angle;\n//                     }\n//                 }\n//                 return ret;\n//             },\n//             stopRotate: function () {\n//                 for (var i = 0, i0 = this.length; i < i0; i++) {\n//                     var element = this.get(i);\n//                     if (element.Wilq32 && element.Wilq32.PhotoEffect) {\n//                         clearTimeout(element.Wilq32.PhotoEffect._timer);\n//                     }\n//                 }\n//             }\n//         });\n//         // Library agnostic interface\n//         Wilq32 = window.Wilq32 || {};\n//         Wilq32.PhotoEffect = (function () {\n//             if (supportedCSS) {\n//                 return function (img, parameters) {\n//                     img.Wilq32 = {\n//                         PhotoEffect: this\n//                     };\n//                     this._img = this._rootObj = this._eventObj = img;\n//                     this._handleRotation(parameters);\n//                 }\n//             } else {\n//                 return function (img, parameters) {\n//                     this._img = img;\n//                     this._onLoadDelegate = [parameters];\n//                     this._rootObj = document.createElement('span');\n//                     this._rootObj.style.display = \"inline-block\";\n//                     this._rootObj.Wilq32 =\n//                     {\n//                         PhotoEffect: this\n//                     };\n//                     img.parentNode.insertBefore(this._rootObj, img);\n//                     if (img.complete) {\n//                         this._Loader();\n//                     } else {\n//                         var self = this;\n//                         // TODO: Remove jQuery dependency\n//                         jQuery(this._img).bind(\"load\", function () { self._Loader(); });\n//                     }\n//                 }\n//             }\n//         })();\n//         Wilq32.PhotoEffect.prototype = {\n//             _setupParameters: function (parameters) {\n//                 this._parameters = this._parameters || {};\n//                 if (typeof this._angle !== \"number\") { this._angle = 0; }\n//                 if (typeof parameters.angle === \"number\") { this._angle = parameters.angle; }\n//                 this._parameters.animateTo = (typeof parameters.animateTo === \"number\") ? (parameters.animateTo) : (this._angle);\n//                 this._parameters.step = parameters.step || this._parameters.step || null;\n//                 this._parameters.easing = parameters.easing || this._parameters.easing || this._defaultEasing;\n//                 this._parameters.duration = 'duration' in parameters ? parameters.duration : parameters.duration || this._parameters.duration || 1000;\n//                 this._parameters.callback = parameters.callback || this._parameters.callback || this._emptyFunction;\n//                 this._parameters.center = parameters.center || this._parameters.center || [\"50%\", \"50%\"];\n//                 if (typeof this._parameters.center[0] == \"string\") {\n//                     this._rotationCenterX = (parseInt(this._parameters.center[0], 10) / 100) * this._imgWidth * this._aspectW;\n//                 } else {\n//                     this._rotationCenterX = this._parameters.center[0];\n//                 }\n//                 if (typeof this._parameters.center[1] == \"string\") {\n//                     this._rotationCenterY = (parseInt(this._parameters.center[1], 10) / 100) * this._imgHeight * this._aspectH;\n//                 } else {\n//                     this._rotationCenterY = this._parameters.center[1];\n//                 }\n//                 if (parameters.bind && parameters.bind != this._parameters.bind) { this._BindEvents(parameters.bind); }\n//             },\n//             _emptyFunction: function () { },\n//             _defaultEasing: function (x, t, b, c, d) { return -c * ((t = t / d - 1) * t * t * t - 1) + b },\n//             _handleRotation: function (parameters, dontcheck) {\n//                 if (!supportedCSS && !this._img.complete && !dontcheck) {\n//                     this._onLoadDelegate.push(parameters);\n//                     return;\n//                 }\n//                 this._setupParameters(parameters);\n//                 if (this._angle == this._parameters.animateTo) {\n//                     this._rotate(this._angle);\n//                 }\n//                 else {\n//                     this._animateStart();\n//                 }\n//             },\n//             _BindEvents: function (events) {\n//                 if (events && this._eventObj) {\n//                     // Unbinding previous Events\n//                     if (this._parameters.bind) {\n//                         var oldEvents = this._parameters.bind;\n//                         for (var a in oldEvents) if (oldEvents.hasOwnProperty(a))\n//                             // TODO: Remove jQuery dependency\n//                             jQuery(this._eventObj).unbind(a, oldEvents[a]);\n//                     }\n//                     this._parameters.bind = events;\n//                     for (var a in events) if (events.hasOwnProperty(a))\n//                         // TODO: Remove jQuery dependency\n//                         jQuery(this._eventObj).bind(a, events[a]);\n//                 }\n//             },\n//             _Loader: (function () {\n//                 return function () {\n//                     this._rootObj.setAttribute('id', this._img.getAttribute('id'));\n//                     this._rootObj.className = this._img.className;\n//                     this._imgWidth = this._img.naturalWidth;\n//                     this._imgHeight = this._img.naturalHeight;\n//                     var _widthMax = Math.sqrt((this._imgHeight) * (this._imgHeight) + (this._imgWidth) * (this._imgWidth));\n//                     this._width = _widthMax * 3;\n//                     this._height = _widthMax * 3;\n//                     this._aspectW = this._img.offsetWidth / this._img.naturalWidth;\n//                     this._aspectH = this._img.offsetHeight / this._img.naturalHeight;\n//                     this._img.parentNode.removeChild(this._img);\n//                     this._canvas = document.createElement('canvas');\n//                     this._canvas.setAttribute('width', this._width);\n//                     this._canvas.style.position = \"relative\";\n//                     this._canvas.style.left = -this._img.height * this._aspectW + \"px\";\n//                     this._canvas.style.top = -this._img.width * this._aspectH + \"px\";\n//                     this._canvas.Wilq32 = this._rootObj.Wilq32;\n//                     this._rootObj.appendChild(this._canvas);\n//                     this._rootObj.style.width = this._img.width * this._aspectW + \"px\";\n//                     this._rootObj.style.height = this._img.height * this._aspectH + \"px\";\n//                     this._eventObj = this._canvas;\n//                     this._cnv = this._canvas.getContext('2d');\n//                     var parameters;\n//                     while (parameters = this._onLoadDelegate.shift()) {\n//                         this._handleRotation(parameters, true);\n//                     }\n//                 }\n//             })(),\n//             _animateStart: function () {\n//                 if (this._timer) {\n//                     clearTimeout(this._timer);\n//                 }\n//                 this._animateStartTime = +new Date;\n//                 this._animateStartAngle = this._angle;\n//                 this._animate();\n//             },\n//             _animate: function () {\n//                 var actualTime = +new Date;\n//                 var checkEnd = actualTime - this._animateStartTime > this._parameters.duration;\n//                 // TODO: Bug for animatedGif for static rotation ? (to test)\n//                 if (checkEnd && !this._parameters.animatedGif) {\n//                     clearTimeout(this._timer);\n//                 }\n//                 else {\n//                     if (this._canvas || this._vimage || this._img) {\n//                         var angle = this._parameters.easing(0, actualTime - this._animateStartTime, this._animateStartAngle, this._parameters.animateTo - this._animateStartAngle, this._parameters.duration);\n//                         this._rotate((~~(angle * 10)) / 10);\n//                     }\n//                     if (this._parameters.step) {\n//                         this._parameters.step(this._angle);\n//                     }\n//                     var self = this;\n//                     this._timer = setTimeout(function () {\n//                         self._animate.call(self);\n//                     }, 10);\n//                 }\n//                 // To fix Bug that prevents using recursive function in callback I moved this function to back\n//                 if (this._parameters.callback && checkEnd) {\n//                     this._angle = this._parameters.animateTo;\n//                     this._rotate(this._angle);\n//                     this._parameters.callback.call(this._rootObj);\n//                 }\n//             },\n//             _rotate: (function () {\n//                 var rad = Math.PI / 180;\n//                 if (IE)\n//                     return function (angle) {\n//                         this._angle = angle;\n//                         this._container.style.rotation = (angle % 360) + \"deg\";\n//                         this._vimage.style.top = -(this._rotationCenterY - this._imgHeight / 2) + \"px\";\n//                         this._vimage.style.left = -(this._rotationCenterX - this._imgWidth / 2) + \"px\";\n//                         this._container.style.top = this._rotationCenterY - this._imgHeight / 2 + \"px\";\n//                         this._container.style.left = this._rotationCenterX - this._imgWidth / 2 + \"px\";\n//                     }\n//                 else if (supportedCSS)\n//                     return function (angle) {\n//                         this._angle = angle;\n//                         this._img.style[supportedCSS] = \"rotate(\" + (angle % 360) + \"deg)\";\n//                         this._img.style[supportedCSSOrigin] = this._parameters.center.join(\" \");\n//                     }\n//                 else\n//                     return function (angle) {\n//                         this._angle = angle;\n//                         angle = (angle % 360) * rad;\n//                         // clear canvas\n//                         this._canvas.width = this._width;//+this._widthAdd;\n//                         this._canvas.height = this._height;//+this._heightAdd;\n//                         // REMEMBER: all drawings are read from backwards.. so first function is translate, then rotate, then translate, translate..\n//                         this._cnv.translate(this._imgWidth * this._aspectW, this._imgHeight * this._aspectH);\t// at least center image on screen\n//                         this._cnv.translate(this._rotationCenterX, this._rotationCenterY);\t\t\t// we move image back to its orginal\n//                         this._cnv.rotate(angle);\t\t\t\t\t\t\t\t\t\t// rotate image\n//                         this._cnv.translate(-this._rotationCenterX, -this._rotationCenterY);\t\t// move image to its center, so we can rotate around its center\n//                         this._cnv.scale(this._aspectW, this._aspectH); // SCALE - if needed ;)\n//                         this._cnv.drawImage(this._img, 0, 0);\t\t\t\t\t\t\t// First - we draw image\n//                     }\n//             })()\n//         }\n//         if (IE) {\n//             Wilq32.PhotoEffect.prototype.createVMLNode = (function () {\n//                 document.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\n//                 try {\n//                     !document.namespaces.rvml && document.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\");\n//                     return function (tagName) {\n//                         return document.createElement('<rvml:' + tagName + ' class=\"rvml\">');\n//                     };\n//                 } catch (e) {\n//                     return function (tagName) {\n//                         return document.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\n//                     };\n//                 }\n//             })();\n//         }\n//     })(jQuery);\n//     return (\n//         <></>\n//     )\n// }\n// export default JqueryRotate;","map":{"version":3,"sources":["C:/Users/wfsk1/Desktop/job_description/front-end/src/Components/RandomWheel/jqueryRotate.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\r\n// import $ from 'jquery';\r\n// // VERSION: 2.3 LAST UPDATE: 11.07.2013\r\n// /*\r\n//  * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php\r\n//  *\r\n//  * Made by Wilq32, wilq32@gmail.com, Wroclaw, Poland, 01.2009\r\n//  * Website: http://jqueryrotate.com\r\n//  */\r\n// const JqueryRotate = () => {\r\n\r\n//     (function ($) {\r\n//         var supportedCSS, supportedCSSOrigin, styles = document.getElementsByTagName(\"head\")[0].style, toCheck = \"transformProperty WebkitTransform OTransform msTransform MozTransform\".split(\" \");\r\n//         for (var a = 0; a < toCheck.length; a++) if (styles[toCheck[a]] !== undefined) { supportedCSS = toCheck[a]; }\r\n//         if (supportedCSS) {\r\n//             supportedCSSOrigin = supportedCSS.replace(/[tT]ransform/, \"TransformOrigin\");\r\n//             if (supportedCSSOrigin[0] == \"T\") supportedCSSOrigin[0] = \"t\";\r\n//         }\r\n\r\n//         // Bad eval to preven google closure to remove it from code o_O\r\n//         eval('IE = \"v\"==\"\\v\"');\r\n\r\n//         jQuery.fn.extend({\r\n//             rotate: function (parameters) {\r\n//                 if (this.length === 0 || typeof parameters == \"undefined\") return;\r\n//                 if (typeof parameters == \"number\") parameters = { angle: parameters };\r\n//                 var returned = [];\r\n//                 for (var i = 0, i0 = this.length; i < i0; i++) {\r\n//                     var element = this.get(i);\r\n//                     if (!element.Wilq32 || !element.Wilq32.PhotoEffect) {\r\n\r\n//                         var paramClone = $.extend(true, {}, parameters);\r\n//                         var newRotObject = new Wilq32.PhotoEffect(element, paramClone)._rootObj;\r\n\r\n//                         returned.push($(newRotObject));\r\n//                     }\r\n//                     else {\r\n//                         element.Wilq32.PhotoEffect._handleRotation(parameters);\r\n//                     }\r\n//                 }\r\n//                 return returned;\r\n//             },\r\n//             getRotateAngle: function () {\r\n//                 var ret = [0];\r\n//                 for (var i = 0, i0 = this.length; i < i0; i++) {\r\n//                     var element = this.get(i);\r\n//                     if (element.Wilq32 && element.Wilq32.PhotoEffect) {\r\n//                         ret[i] = element.Wilq32.PhotoEffect._angle;\r\n//                     }\r\n//                 }\r\n//                 return ret;\r\n//             },\r\n//             stopRotate: function () {\r\n//                 for (var i = 0, i0 = this.length; i < i0; i++) {\r\n//                     var element = this.get(i);\r\n//                     if (element.Wilq32 && element.Wilq32.PhotoEffect) {\r\n//                         clearTimeout(element.Wilq32.PhotoEffect._timer);\r\n//                     }\r\n//                 }\r\n//             }\r\n//         });\r\n\r\n//         // Library agnostic interface\r\n\r\n//         Wilq32 = window.Wilq32 || {};\r\n//         Wilq32.PhotoEffect = (function () {\r\n\r\n//             if (supportedCSS) {\r\n//                 return function (img, parameters) {\r\n//                     img.Wilq32 = {\r\n//                         PhotoEffect: this\r\n//                     };\r\n\r\n//                     this._img = this._rootObj = this._eventObj = img;\r\n//                     this._handleRotation(parameters);\r\n//                 }\r\n//             } else {\r\n//                 return function (img, parameters) {\r\n//                     this._img = img;\r\n//                     this._onLoadDelegate = [parameters];\r\n\r\n//                     this._rootObj = document.createElement('span');\r\n//                     this._rootObj.style.display = \"inline-block\";\r\n//                     this._rootObj.Wilq32 =\r\n//                     {\r\n//                         PhotoEffect: this\r\n//                     };\r\n//                     img.parentNode.insertBefore(this._rootObj, img);\r\n\r\n//                     if (img.complete) {\r\n//                         this._Loader();\r\n//                     } else {\r\n//                         var self = this;\r\n//                         // TODO: Remove jQuery dependency\r\n//                         jQuery(this._img).bind(\"load\", function () { self._Loader(); });\r\n//                     }\r\n//                 }\r\n//             }\r\n//         })();\r\n\r\n//         Wilq32.PhotoEffect.prototype = {\r\n//             _setupParameters: function (parameters) {\r\n//                 this._parameters = this._parameters || {};\r\n//                 if (typeof this._angle !== \"number\") { this._angle = 0; }\r\n//                 if (typeof parameters.angle === \"number\") { this._angle = parameters.angle; }\r\n//                 this._parameters.animateTo = (typeof parameters.animateTo === \"number\") ? (parameters.animateTo) : (this._angle);\r\n\r\n//                 this._parameters.step = parameters.step || this._parameters.step || null;\r\n//                 this._parameters.easing = parameters.easing || this._parameters.easing || this._defaultEasing;\r\n//                 this._parameters.duration = 'duration' in parameters ? parameters.duration : parameters.duration || this._parameters.duration || 1000;\r\n//                 this._parameters.callback = parameters.callback || this._parameters.callback || this._emptyFunction;\r\n//                 this._parameters.center = parameters.center || this._parameters.center || [\"50%\", \"50%\"];\r\n//                 if (typeof this._parameters.center[0] == \"string\") {\r\n//                     this._rotationCenterX = (parseInt(this._parameters.center[0], 10) / 100) * this._imgWidth * this._aspectW;\r\n//                 } else {\r\n//                     this._rotationCenterX = this._parameters.center[0];\r\n//                 }\r\n//                 if (typeof this._parameters.center[1] == \"string\") {\r\n//                     this._rotationCenterY = (parseInt(this._parameters.center[1], 10) / 100) * this._imgHeight * this._aspectH;\r\n//                 } else {\r\n//                     this._rotationCenterY = this._parameters.center[1];\r\n//                 }\r\n\r\n//                 if (parameters.bind && parameters.bind != this._parameters.bind) { this._BindEvents(parameters.bind); }\r\n//             },\r\n//             _emptyFunction: function () { },\r\n//             _defaultEasing: function (x, t, b, c, d) { return -c * ((t = t / d - 1) * t * t * t - 1) + b },\r\n//             _handleRotation: function (parameters, dontcheck) {\r\n//                 if (!supportedCSS && !this._img.complete && !dontcheck) {\r\n//                     this._onLoadDelegate.push(parameters);\r\n//                     return;\r\n//                 }\r\n//                 this._setupParameters(parameters);\r\n//                 if (this._angle == this._parameters.animateTo) {\r\n//                     this._rotate(this._angle);\r\n//                 }\r\n//                 else {\r\n//                     this._animateStart();\r\n//                 }\r\n//             },\r\n\r\n//             _BindEvents: function (events) {\r\n//                 if (events && this._eventObj) {\r\n//                     // Unbinding previous Events\r\n//                     if (this._parameters.bind) {\r\n//                         var oldEvents = this._parameters.bind;\r\n//                         for (var a in oldEvents) if (oldEvents.hasOwnProperty(a))\r\n//                             // TODO: Remove jQuery dependency\r\n//                             jQuery(this._eventObj).unbind(a, oldEvents[a]);\r\n//                     }\r\n\r\n//                     this._parameters.bind = events;\r\n//                     for (var a in events) if (events.hasOwnProperty(a))\r\n//                         // TODO: Remove jQuery dependency\r\n//                         jQuery(this._eventObj).bind(a, events[a]);\r\n//                 }\r\n//             },\r\n\r\n//             _Loader: (function () {\r\n//                 return function () {\r\n//                     this._rootObj.setAttribute('id', this._img.getAttribute('id'));\r\n//                     this._rootObj.className = this._img.className;\r\n\r\n//                     this._imgWidth = this._img.naturalWidth;\r\n//                     this._imgHeight = this._img.naturalHeight;\r\n//                     var _widthMax = Math.sqrt((this._imgHeight) * (this._imgHeight) + (this._imgWidth) * (this._imgWidth));\r\n//                     this._width = _widthMax * 3;\r\n//                     this._height = _widthMax * 3;\r\n\r\n//                     this._aspectW = this._img.offsetWidth / this._img.naturalWidth;\r\n//                     this._aspectH = this._img.offsetHeight / this._img.naturalHeight;\r\n\r\n//                     this._img.parentNode.removeChild(this._img);\r\n\r\n\r\n//                     this._canvas = document.createElement('canvas');\r\n//                     this._canvas.setAttribute('width', this._width);\r\n//                     this._canvas.style.position = \"relative\";\r\n//                     this._canvas.style.left = -this._img.height * this._aspectW + \"px\";\r\n//                     this._canvas.style.top = -this._img.width * this._aspectH + \"px\";\r\n//                     this._canvas.Wilq32 = this._rootObj.Wilq32;\r\n\r\n//                     this._rootObj.appendChild(this._canvas);\r\n//                     this._rootObj.style.width = this._img.width * this._aspectW + \"px\";\r\n//                     this._rootObj.style.height = this._img.height * this._aspectH + \"px\";\r\n//                     this._eventObj = this._canvas;\r\n\r\n//                     this._cnv = this._canvas.getContext('2d');\r\n//                     var parameters;\r\n//                     while (parameters = this._onLoadDelegate.shift()) {\r\n//                         this._handleRotation(parameters, true);\r\n//                     }\r\n//                 }\r\n//             })(),\r\n\r\n//             _animateStart: function () {\r\n//                 if (this._timer) {\r\n//                     clearTimeout(this._timer);\r\n//                 }\r\n//                 this._animateStartTime = +new Date;\r\n//                 this._animateStartAngle = this._angle;\r\n//                 this._animate();\r\n//             },\r\n//             _animate: function () {\r\n//                 var actualTime = +new Date;\r\n//                 var checkEnd = actualTime - this._animateStartTime > this._parameters.duration;\r\n\r\n//                 // TODO: Bug for animatedGif for static rotation ? (to test)\r\n//                 if (checkEnd && !this._parameters.animatedGif) {\r\n//                     clearTimeout(this._timer);\r\n//                 }\r\n//                 else {\r\n//                     if (this._canvas || this._vimage || this._img) {\r\n//                         var angle = this._parameters.easing(0, actualTime - this._animateStartTime, this._animateStartAngle, this._parameters.animateTo - this._animateStartAngle, this._parameters.duration);\r\n//                         this._rotate((~~(angle * 10)) / 10);\r\n//                     }\r\n//                     if (this._parameters.step) {\r\n//                         this._parameters.step(this._angle);\r\n//                     }\r\n//                     var self = this;\r\n//                     this._timer = setTimeout(function () {\r\n//                         self._animate.call(self);\r\n//                     }, 10);\r\n//                 }\r\n\r\n//                 // To fix Bug that prevents using recursive function in callback I moved this function to back\r\n//                 if (this._parameters.callback && checkEnd) {\r\n//                     this._angle = this._parameters.animateTo;\r\n//                     this._rotate(this._angle);\r\n//                     this._parameters.callback.call(this._rootObj);\r\n//                 }\r\n//             },\r\n\r\n//             _rotate: (function () {\r\n//                 var rad = Math.PI / 180;\r\n//                 if (IE)\r\n//                     return function (angle) {\r\n//                         this._angle = angle;\r\n//                         this._container.style.rotation = (angle % 360) + \"deg\";\r\n//                         this._vimage.style.top = -(this._rotationCenterY - this._imgHeight / 2) + \"px\";\r\n//                         this._vimage.style.left = -(this._rotationCenterX - this._imgWidth / 2) + \"px\";\r\n//                         this._container.style.top = this._rotationCenterY - this._imgHeight / 2 + \"px\";\r\n//                         this._container.style.left = this._rotationCenterX - this._imgWidth / 2 + \"px\";\r\n\r\n//                     }\r\n//                 else if (supportedCSS)\r\n//                     return function (angle) {\r\n//                         this._angle = angle;\r\n//                         this._img.style[supportedCSS] = \"rotate(\" + (angle % 360) + \"deg)\";\r\n//                         this._img.style[supportedCSSOrigin] = this._parameters.center.join(\" \");\r\n//                     }\r\n//                 else\r\n//                     return function (angle) {\r\n//                         this._angle = angle;\r\n//                         angle = (angle % 360) * rad;\r\n//                         // clear canvas\r\n//                         this._canvas.width = this._width;//+this._widthAdd;\r\n//                         this._canvas.height = this._height;//+this._heightAdd;\r\n\r\n//                         // REMEMBER: all drawings are read from backwards.. so first function is translate, then rotate, then translate, translate..\r\n//                         this._cnv.translate(this._imgWidth * this._aspectW, this._imgHeight * this._aspectH);\t// at least center image on screen\r\n//                         this._cnv.translate(this._rotationCenterX, this._rotationCenterY);\t\t\t// we move image back to its orginal\r\n//                         this._cnv.rotate(angle);\t\t\t\t\t\t\t\t\t\t// rotate image\r\n//                         this._cnv.translate(-this._rotationCenterX, -this._rotationCenterY);\t\t// move image to its center, so we can rotate around its center\r\n//                         this._cnv.scale(this._aspectW, this._aspectH); // SCALE - if needed ;)\r\n//                         this._cnv.drawImage(this._img, 0, 0);\t\t\t\t\t\t\t// First - we draw image\r\n//                     }\r\n\r\n//             })()\r\n//         }\r\n\r\n//         if (IE) {\r\n//             Wilq32.PhotoEffect.prototype.createVMLNode = (function () {\r\n//                 document.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\r\n//                 try {\r\n//                     !document.namespaces.rvml && document.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\");\r\n//                     return function (tagName) {\r\n//                         return document.createElement('<rvml:' + tagName + ' class=\"rvml\">');\r\n//                     };\r\n//                 } catch (e) {\r\n//                     return function (tagName) {\r\n//                         return document.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\r\n//                     };\r\n//                 }\r\n//             })();\r\n//         }\r\n\r\n//     })(jQuery);\r\n//     return (\r\n//         <></>\r\n//     )\r\n// }\r\n\r\n// export default JqueryRotate;"]},"metadata":{},"sourceType":"module"}