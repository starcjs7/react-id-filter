{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wfsk1\\\\Desktop\\\\job_description\\\\front-end\\\\src\\\\Components\\\\idFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, Fragment } from 'react';\nimport logo_twitch from '../Images/twitch_mini_logo.png';\nimport logo_youtube from '../Images/youtube_mini_logo.png';\nimport '../Style/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar a = `\n민트_초ㅋ (dmsnwl94): 아하\n민트_초ㅋ (dmsnwl94): 아하2\nmiddleage_: 혹시 최하급보석 많으신분~\n햝햝햝햝 (forke1212): 횃불 인벤에 넣는가 안넣는가 보고있습니다 후후\n민트_초ㅋ (dmsnwl94): 어쩐지 이야기 하는게 맛갈나게 잘 푸시더라고\n불멸의거너스 (kikwsi): 웹소설 작가가 목표이신가요?\n불멸의거너스 (kikwsi): 아하..ㅎㅎ 하시면 챙겨볼게요!\ngun6750: 저요!\n불멸의거너스 (kikwsi): 저 어제 아트마요~\nmiddleage_: 저요~\n쉬리한마리 (wnssl611): ㄱ\n`;\nvar b = `\n\nfoofoo woo\n​와 탈갑이네 먹으려고 2주동안 다녔는데 안나오네요\n\nglory kim\n​엘드리치 나눔좀.\n\n박세연\n​주시면 감사하겠습니당 ^^;;\n\nfoofoo woo\n​탈갑이나 탈목 드랍으로 드신분 계시나요 혹시 ?\n\n티님t\n​안녕하세요~~ 늦었네요~\n\n박세연\n​저요!\n\nglory kim\n​저요~~\n`;\n\nconst removeBlank = arr => {\n  const arrResult = arr.reduce(function (result, data) {\n    if (data !== '') result.push(data);\n    return result;\n  }, []);\n  return arrResult;\n};\n\nconst parsingDatas = (arr, platform) => {\n  const arrResult = arr.map(data => {\n    const json = {\n      platform,\n      id: data.substring(0, data.indexOf(': ')),\n      msg: data.substring(data.indexOf(': ') + 2, data.length)\n    };\n    return json;\n  });\n  return arrResult;\n};\n\nconst IdFilter = () => {\n  _s();\n\n  const overlabRemoveCheckboxRef = useRef();\n  const twitchTextAreaRef = useRef();\n  const youtubeTextAreaRef = useRef();\n  const [searchText, setSearchText] = useState('');\n  const [overlabChecked, setOverlabChecked] = useState(true);\n  const [chattingTextList, setChattingTextList] = useState([]);\n  const [winnerList, setWinnerList] = useState([]);\n  useEffect(() => {\n    let tempArr = [];\n\n    for (const i in chattingTextList) {\n      const isSearchText = chattingTextList[i].msg.indexOf(searchText);\n\n      if (isSearchText > -1 && searchText !== '') {\n        tempArr.push(chattingTextList[i]);\n      }\n    } // 중복 제거 체크박스 체크 여부\n    // const isOverlabCheckbox = overlabRemoveCheckboxRef.current.checked\n    // 체크되어 있으면 중복제거\n\n\n    if (overlabChecked) {\n      const arrResult = tempArr.reduce(function (result, data) {\n        const _thing = data.id; // if (data !== '') \n        //     result.push(data);\n\n        tempArr.findIndex(obj => {\n          console.log('22222222222222');\n          console.log(obj.id === _thing);\n          return obj.id === _thing;\n        });\n        return result;\n      }, []);\n      let uniqueJson = tempArr.map((thing, index) => {\n        const _thing = thing.id;\n        console.log('index');\n        console.log(index);\n        console.log('index === tempArr.findIndex(obj => {return obj.id === _thing;})');\n        console.log(index === tempArr.findIndex(obj => {\n          return obj.id === _thing;\n        }));\n        return index === tempArr.findIndex(obj => {\n          // if(obj.id === _thing){\n          //     console.log('obj')\n          //     console.log(obj)\n          // }\n          console.log('obj.id === _thing');\n          console.log(obj.id === _thing);\n          return obj.id === _thing;\n        });\n      });\n      console.log('uniqueJson');\n      console.log(uniqueJson);\n      setWinnerList(uniqueJson);\n    } else setWinnerList(tempArr);\n  }, [overlabChecked, searchText, chattingTextList]);\n\n  const onChangeSearchText = e => {\n    const searchText = e.target.value;\n    setSearchText(searchText.trim());\n  };\n\n  const onChangeOverlabCheckbox = e => {\n    const isChecked = e.target.checked;\n    setOverlabChecked(isChecked);\n  };\n\n  const onClickWinnerListCopy = e => {\n    let copyIDList = '';\n\n    for (const i in winnerList) {\n      copyIDList += winnerList[i].id + '\\n';\n    }\n\n    const t = document.createElement(\"textarea\");\n    document.body.appendChild(t);\n    t.value = copyIDList;\n    t.select();\n    document.execCommand('copy');\n    document.body.removeChild(t);\n    alert('복사되었습니다.');\n  };\n\n  const onChangeTextArea = e => {\n    const twitchText = twitchTextAreaRef.current.value;\n    const youtubeText = `\\n\\n` + youtubeTextAreaRef.current.value; // 유튜브는 한줄로 안나와서 맨첨에 \\n\\n 넣어서 첫번째도 걸릴 수 있게 처리함\n\n    /* Twitch */\n\n    let arrTemp = twitchText.split(/\\r?\\n/);\n    const refinedTwitchData = removeBlank(arrTemp);\n    const arrTwitch = parsingDatas(refinedTwitchData, 'twitch');\n    /* // Twitch */\n\n    /* Youtube */\n\n    let tempSplitArr = youtubeText.split(/\\r?\\n{2,}/); // 유튜브 댓글은 한줄로 안나와서 한줄로 만들어줘야함\n\n    tempSplitArr = tempSplitArr.map(data => data.replace('\\n', ': ')); // 유튜브 댓글 아이디와 채팅 사이에 \\n이 들어가서 :로 바꿔주기\n\n    tempSplitArr = tempSplitArr.map(data => data.replace('\\t', '')); // 유튜브 댓글 아이디와 채팅 사이에 \\n이 들어가서 :로 바꿔주기\n\n    const refinedYoutubeData = removeBlank(tempSplitArr);\n    const arrYoutube = parsingDatas(refinedYoutubeData, 'youtube');\n    /* // Youtube */\n\n    const arrResult = [...arrTwitch, ...arrYoutube];\n    setChattingTextList(arrResult);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"id_filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top_menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uAC80\\uC0C9\\uC5B4: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: onChangeSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC911\\uBCF5 \\uC81C\\uAC70\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onChange: onChangeOverlabCheckbox,\n        ref: overlabRemoveCheckboxRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content_box chatting\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"twitch_chatting_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo_twitch,\n            className: 'logo_twitch'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Twitch Chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: onChangeTextArea,\n            ref: twitchTextAreaRef,\n            value: a\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"youtube_chatting_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo_youtube,\n            className: 'logo_youtube'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Youtube Chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: onChangeTextArea,\n            ref: youtubeTextAreaRef,\n            value: b\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content_box result\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result_banner\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"\\uB2F9\\uCCA8\\uC790 \", winnerList.length, \"\\uBA85\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClickWinnerListCopy,\n            children: \"ID \\uBCF5\\uC0AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), winnerList.map((data, idx) => {\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner_box\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: data.platform === 'twitch' ? logo_twitch : logo_youtube,\n                className: data.platform === 'twitch' ? 'logo_twitch' : 'logo_youtube'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"winner_id\",\n                children: data.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"winner_msg\",\n                children: data.msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 37\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IdFilter, \"QHo50nd2VyZr+0urRVamb/FZSmc=\");\n\n_c = IdFilter;\nexport default IdFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"IdFilter\");","map":{"version":3,"sources":["C:/Users/wfsk1/Desktop/job_description/front-end/src/Components/idFilter.js"],"names":["React","useEffect","useState","useRef","Fragment","logo_twitch","logo_youtube","a","b","removeBlank","arr","arrResult","reduce","result","data","push","parsingDatas","platform","map","json","id","substring","indexOf","msg","length","IdFilter","overlabRemoveCheckboxRef","twitchTextAreaRef","youtubeTextAreaRef","searchText","setSearchText","overlabChecked","setOverlabChecked","chattingTextList","setChattingTextList","winnerList","setWinnerList","tempArr","i","isSearchText","_thing","findIndex","obj","console","log","uniqueJson","thing","index","onChangeSearchText","e","target","value","trim","onChangeOverlabCheckbox","isChecked","checked","onClickWinnerListCopy","copyIDList","t","document","createElement","body","appendChild","select","execCommand","removeChild","alert","onChangeTextArea","twitchText","current","youtubeText","arrTemp","split","refinedTwitchData","arrTwitch","tempSplitArr","replace","refinedYoutubeData","arrYoutube","idx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, Fragment } from 'react'\r\nimport logo_twitch from '../Images/twitch_mini_logo.png'\r\nimport logo_youtube from '../Images/youtube_mini_logo.png'\r\nimport '../Style/style.css'\r\n\r\nvar a = `\r\n민트_초ㅋ (dmsnwl94): 아하\r\n민트_초ㅋ (dmsnwl94): 아하2\r\nmiddleage_: 혹시 최하급보석 많으신분~\r\n햝햝햝햝 (forke1212): 횃불 인벤에 넣는가 안넣는가 보고있습니다 후후\r\n민트_초ㅋ (dmsnwl94): 어쩐지 이야기 하는게 맛갈나게 잘 푸시더라고\r\n불멸의거너스 (kikwsi): 웹소설 작가가 목표이신가요?\r\n불멸의거너스 (kikwsi): 아하..ㅎㅎ 하시면 챙겨볼게요!\r\ngun6750: 저요!\r\n불멸의거너스 (kikwsi): 저 어제 아트마요~\r\nmiddleage_: 저요~\r\n쉬리한마리 (wnssl611): ㄱ\r\n`\r\nvar b = `\r\n\r\nfoofoo woo\r\n​와 탈갑이네 먹으려고 2주동안 다녔는데 안나오네요\r\n\r\nglory kim\r\n​엘드리치 나눔좀.\r\n\r\n박세연\r\n​주시면 감사하겠습니당 ^^;;\r\n\r\nfoofoo woo\r\n​탈갑이나 탈목 드랍으로 드신분 계시나요 혹시 ?\r\n\r\n티님t\r\n​안녕하세요~~ 늦었네요~\r\n\r\n박세연\r\n​저요!\r\n\r\nglory kim\r\n​저요~~\r\n`\r\n\r\nconst removeBlank = (arr) => {\r\n    const arrResult = arr.reduce(function(result, data) {\r\n        if (data !== '') \r\n            result.push(data);\r\n        return result;\r\n      }, []);\r\n\r\n    return arrResult;\r\n}\r\nconst parsingDatas = (arr, platform) => {\r\n    const arrResult = arr.map((data) => {\r\n        const json ={\r\n            platform,\r\n            id: data.substring(0, data.indexOf(': ')),\r\n            msg: data.substring(data.indexOf(': ') + 2, data.length)\r\n        }\r\n        return json;\r\n    });\r\n    return arrResult;\r\n}\r\n\r\nconst IdFilter = () => {\r\n    const overlabRemoveCheckboxRef = useRef();\r\n    const twitchTextAreaRef = useRef();\r\n    const youtubeTextAreaRef = useRef();\r\n\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n    const [overlabChecked, setOverlabChecked] = useState(true);\r\n\r\n    const [chattingTextList, setChattingTextList] = useState([]);\r\n    const [winnerList, setWinnerList] = useState([]);\r\n\r\n    useEffect (() => {\r\n        let tempArr = []\r\n        for(const i in chattingTextList){\r\n            const isSearchText = chattingTextList[i].msg.indexOf(searchText);\r\n            if(isSearchText > -1 && searchText !== ''){\r\n                tempArr.push(chattingTextList[i])\r\n            }\r\n        }\r\n\r\n        // 중복 제거 체크박스 체크 여부\r\n        // const isOverlabCheckbox = overlabRemoveCheckboxRef.current.checked\r\n        // 체크되어 있으면 중복제거\r\n        if(overlabChecked){\r\n\r\n\r\n\r\n            const arrResult = tempArr.reduce(function(result, data) {\r\n                const _thing = data.id;\r\n\r\n                // if (data !== '') \r\n                //     result.push(data);\r\n                \r\n                \r\n                tempArr.findIndex(obj => {\r\n                    console.log('22222222222222')\r\n                    console.log(obj.id === _thing)\r\n                    return obj.id === _thing;\r\n                });\r\n\r\n                return result;\r\n              }, []);\r\n\r\n\r\n            let uniqueJson = tempArr.map((thing, index) => {\r\n                const _thing = thing.id;\r\n                console.log('index')\r\n                console.log(index)\r\n\r\n                console.log('index === tempArr.findIndex(obj => {return obj.id === _thing;})')\r\n                console.log(index === tempArr.findIndex(obj => {return obj.id === _thing;}))\r\n\r\n                return index === tempArr.findIndex(obj => {\r\n                    \r\n                    // if(obj.id === _thing){\r\n                    //     console.log('obj')\r\n                    //     console.log(obj)\r\n                    // }\r\n                    console.log('obj.id === _thing')\r\n                    console.log(obj.id === _thing)\r\n                    return obj.id === _thing;\r\n                });\r\n            });\r\n            console.log('uniqueJson')\r\n            console.log(uniqueJson)\r\n            setWinnerList(uniqueJson)\r\n        }\r\n        else\r\n            setWinnerList(tempArr)\r\n    }, [overlabChecked, searchText, chattingTextList])\r\n\r\n    const onChangeSearchText = (e) => {\r\n        const searchText = e.target.value;\r\n        setSearchText(searchText.trim())\r\n    }\r\n\r\n    const onChangeOverlabCheckbox = (e) => {\r\n        const isChecked = e.target.checked;\r\n        setOverlabChecked(isChecked)\r\n    }\r\n\r\n    const onClickWinnerListCopy = (e) => {\r\n        let copyIDList = '';\r\n        for(const i in winnerList){\r\n            copyIDList += winnerList[i].id + '\\n'\r\n        }\r\n        const t = document.createElement(\"textarea\");\r\n        document.body.appendChild(t);\r\n        t.value = copyIDList;\r\n        t.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(t);\r\n\r\n        alert('복사되었습니다.')\r\n    }\r\n\r\n    const onChangeTextArea = (e) => {\r\n        const twitchText = twitchTextAreaRef.current.value;\r\n        const youtubeText = `\\n\\n` + youtubeTextAreaRef.current.value;     // 유튜브는 한줄로 안나와서 맨첨에 \\n\\n 넣어서 첫번째도 걸릴 수 있게 처리함\r\n\r\n        /* Twitch */\r\n        let arrTemp = twitchText.split(/\\r?\\n/);\r\n        const refinedTwitchData = removeBlank(arrTemp)\r\n        const arrTwitch = parsingDatas(refinedTwitchData, 'twitch');\r\n        /* // Twitch */\r\n\r\n        /* Youtube */\r\n        let tempSplitArr = youtubeText.split(/\\r?\\n{2,}/);        // 유튜브 댓글은 한줄로 안나와서 한줄로 만들어줘야함\r\n        tempSplitArr = tempSplitArr.map((data) => data.replace('\\n', ': '))      // 유튜브 댓글 아이디와 채팅 사이에 \\n이 들어가서 :로 바꿔주기\r\n        tempSplitArr = tempSplitArr.map((data) => data.replace('\\t', ''))      // 유튜브 댓글 아이디와 채팅 사이에 \\n이 들어가서 :로 바꿔주기\r\n        const refinedYoutubeData = removeBlank(tempSplitArr)\r\n        const arrYoutube = parsingDatas(refinedYoutubeData, 'youtube');\r\n        /* // Youtube */\r\n\r\n        const arrResult = [...arrTwitch, ...arrYoutube]\r\n \r\n        setChattingTextList(arrResult)\r\n    }\r\n\r\n    return (\r\n        <div id=\"id_filter\">\r\n            <div className=\"top_menu\">\r\n                <label>검색어: </label>\r\n                <input type='text' onChange={onChangeSearchText} />\r\n\r\n                <label>중복 제거</label>\r\n                <input type=\"checkbox\" defaultChecked=\"true\" onChange={onChangeOverlabCheckbox} ref={overlabRemoveCheckboxRef} />\r\n            </div>\r\n\r\n            <div className=\"content\">\r\n                <div className=\"content_box chatting\">\r\n                    <div className=\"twitch_chatting_box\">\r\n                        <img src={logo_twitch} className={'logo_twitch'} />\r\n                        <label>Twitch Chatting</label>\r\n                        <textarea onChange={onChangeTextArea} ref={twitchTextAreaRef} value={a} />\r\n                    </div>\r\n\r\n                    <div className=\"youtube_chatting_box\">\r\n                        <img src={logo_youtube} className={'logo_youtube'} />\r\n                        <label>Youtube Chatting</label>\r\n                        <textarea onChange={onChangeTextArea} ref={youtubeTextAreaRef} value={b} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"content_box result\">\r\n                    <div className=\"result_banner\">\r\n                        <h2>당첨자 {winnerList.length}명</h2>\r\n                        <button onClick={onClickWinnerListCopy}>ID 복사</button>\r\n                    </div>\r\n                    {\r\n                        winnerList.map((data, idx) => {\r\n                            return (\r\n                                <Fragment key={idx}>\r\n                                    <div className=\"winner_box\">\r\n                                        <img src={data.platform === 'twitch' ? logo_twitch : logo_youtube} className={data.platform === 'twitch' ? 'logo_twitch' : 'logo_youtube'} />\r\n                                        <label className=\"winner_id\">{data.id}</label>\r\n                                        <label className=\"winner_msg\">{data.msg}</label>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IdFilter;\r\n"]},"metadata":{},"sourceType":"module"}