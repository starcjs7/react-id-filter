{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wfsk1\\\\Desktop\\\\job_description\\\\front-end\\\\src\\\\Components\\\\idFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport '../Style/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar a = `\n민트_초ㅋ (dmsnwl94): 아하\nmiddleage_: 혹시 최하급보석 많으신분~\n햝햝햝햝 (forke1212): 횃불 인벤에 넣는가 안넣는가 보고있습니다 후후\n민트_초ㅋ (dmsnwl94): 어쩐지 이야기 하는게 맛갈나게 잘 푸시더라고\n불멸의거너스 (kikwsi): 웹소설 작가가 목표이신가요?\n불멸의거너스 (kikwsi): 아하..ㅎㅎ 하시면 챙겨볼게요!\ngun6750: 저요!\n불멸의거너스 (kikwsi): 저 어제 아트마요~\nmiddleage_: 저요~\n쉬리한마리 (wnssl611): ㄱ\n`;\nvar b = `\n\nfoofoo woo\n​와 탈갑이네 먹으려고 2주동안 다녔는데 안나오네요\n\nglory kim\n​엘드리치 나눔좀.\n\n박세연\n​주시면 감사하겠습니당 ^^;;\n\nfoofoo woo\n​탈갑이나 탈목 드랍으로 드신분 계시나요 혹시 ?\n\n티님t\n​안녕하세요~~ 늦었네요~\n\n박세연\n​저요!\n\nglory kim\n​저요~~\n`;\n\nconst removeOverlab = arr => {\n  const arrResult = arr.reduce(function (result, data) {\n    if (data !== '') result.push(data);\n    return result;\n  }, []);\n  return arrResult;\n};\n\nconst parsingDatas = (arr, platform) => {\n  const arrResult = arr.map(data => {\n    const json = {\n      platform,\n      id: data.substring(0, data.indexOf(': ')),\n      msg: data.substring(data.indexOf(': ') + 2, data.length)\n    };\n    return json;\n  });\n  return arrResult;\n};\n\nconst IdFilter = () => {\n  _s();\n\n  const twitchTextArea = useRef();\n  const youtubeTextArea = useRef();\n  const [chattingText, setChattingText] = useState([]); // const [twitchTextArea, setTwitchTextArea] = useState([]);\n  // const [youtubeTextArea, setYoutubeTextArea] = useState([]);\n  // const onChangeTwitchTextArea = (e, platform) => {\n  //     const textArea_value = e.target.value;\n  //     const arrValue = textArea_value.split(/\\r?\\n/);\n  //     setTwitchTextArea(arrValue);\n  // }\n  // const onChangeYoutubeTextArea = (e) => {\n  //     const textArea_value = e.target.value;\n  //     const arrValue = textArea_value.split(/\\r?\\n\\r?\\n/);\n  //     setYoutubeTextArea(arrValue);\n  // }\n\n  const onChangeTextArea = e => {\n    const twitchText = twitchTextArea.current.value;\n    const youtubeText = youtubeTextArea.current.value;\n    /* Twitch */\n\n    let arrTemp = twitchText.split(/\\r?\\n/);\n    const refinedTwitchData = removeOverlab(arrTemp);\n    const arrTwitch = parsingDatas(refinedTwitchData, 'twitch');\n    /* // Twitch */\n\n    /* Youtube */\n\n    let tempSplitArr = youtubeText.split(/\\r?\\n\\r?\\n/); // 유튜브 댓글은 한줄로 안나와서 한줄로 만들어줘야함\n\n    tempSplitArr = tempSplitArr.map(data => data.replace('\\n', ': ')); // 유튜브 댓글 아이디와 채팅 사이에 \\n이 들어가서 :로 바꿔주기\n\n    const refinedYoutubeData = removeOverlab(tempSplitArr);\n    const arrYoutube = parsingDatas(refinedYoutubeData, 'youtube');\n    /* // Youtube */\n\n    const arrResult = [...arrTwitch, ...arrYoutube];\n    setChattingText(arrResult);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"id_filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top_menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uAC80\\uC0C9\\uC5B4:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC911\\uBCF5 \\uC81C\\uAC70\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content_box chatting\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitch_chatting_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Twitch Chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: onChangeTextArea,\n          ref: twitchTextArea,\n          value: a\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"youtube_chatting_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Youtube Chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: onChangeTextArea,\n          ref: youtubeTextArea,\n          value: b\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content_box result\",\n      children: chattingText.map(data => {\n        console.log(data);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.platform\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IdFilter, \"+ve8dBMTd0c2KoY6tjUJ1q3zzrs=\");\n\n_c = IdFilter;\nexport default IdFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"IdFilter\");","map":{"version":3,"sources":["C:/Users/wfsk1/Desktop/job_description/front-end/src/Components/idFilter.js"],"names":["React","useState","useRef","a","b","removeOverlab","arr","arrResult","reduce","result","data","push","parsingDatas","platform","map","json","id","substring","indexOf","msg","length","IdFilter","twitchTextArea","youtubeTextArea","chattingText","setChattingText","onChangeTextArea","e","twitchText","current","value","youtubeText","arrTemp","split","refinedTwitchData","arrTwitch","tempSplitArr","replace","refinedYoutubeData","arrYoutube","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport '../Style/style.css'\r\n\r\nvar a = `\r\n민트_초ㅋ (dmsnwl94): 아하\r\nmiddleage_: 혹시 최하급보석 많으신분~\r\n햝햝햝햝 (forke1212): 횃불 인벤에 넣는가 안넣는가 보고있습니다 후후\r\n민트_초ㅋ (dmsnwl94): 어쩐지 이야기 하는게 맛갈나게 잘 푸시더라고\r\n불멸의거너스 (kikwsi): 웹소설 작가가 목표이신가요?\r\n불멸의거너스 (kikwsi): 아하..ㅎㅎ 하시면 챙겨볼게요!\r\ngun6750: 저요!\r\n불멸의거너스 (kikwsi): 저 어제 아트마요~\r\nmiddleage_: 저요~\r\n쉬리한마리 (wnssl611): ㄱ\r\n`\r\nvar b = `\r\n\r\nfoofoo woo\r\n​와 탈갑이네 먹으려고 2주동안 다녔는데 안나오네요\r\n\r\nglory kim\r\n​엘드리치 나눔좀.\r\n\r\n박세연\r\n​주시면 감사하겠습니당 ^^;;\r\n\r\nfoofoo woo\r\n​탈갑이나 탈목 드랍으로 드신분 계시나요 혹시 ?\r\n\r\n티님t\r\n​안녕하세요~~ 늦었네요~\r\n\r\n박세연\r\n​저요!\r\n\r\nglory kim\r\n​저요~~\r\n`\r\n\r\nconst removeOverlab = (arr) => {\r\n    const arrResult = arr.reduce(function(result, data) {\r\n        if (data !== '') \r\n            result.push(data);\r\n        return result;\r\n      }, []);\r\n\r\n    return arrResult;\r\n}\r\nconst parsingDatas = (arr, platform) => {\r\n    const arrResult = arr.map((data) => {\r\n        const json ={\r\n            platform,\r\n            id: data.substring(0, data.indexOf(': ')),\r\n            msg: data.substring(data.indexOf(': ') + 2, data.length)\r\n        }\r\n        return json;\r\n    });\r\n    return arrResult;\r\n}\r\n\r\nconst IdFilter = () => {\r\n    const twitchTextArea = useRef();\r\n    const youtubeTextArea = useRef();\r\n\r\n    const [chattingText, setChattingText] = useState([]);\r\n\r\n    // const [twitchTextArea, setTwitchTextArea] = useState([]);\r\n    // const [youtubeTextArea, setYoutubeTextArea] = useState([]);\r\n\r\n    // const onChangeTwitchTextArea = (e, platform) => {\r\n    //     const textArea_value = e.target.value;\r\n    //     const arrValue = textArea_value.split(/\\r?\\n/);\r\n\r\n    //     setTwitchTextArea(arrValue);\r\n    // }\r\n\r\n    // const onChangeYoutubeTextArea = (e) => {\r\n    //     const textArea_value = e.target.value;\r\n    //     const arrValue = textArea_value.split(/\\r?\\n\\r?\\n/);\r\n\r\n    //     setYoutubeTextArea(arrValue);\r\n    // }\r\n\r\n    const onChangeTextArea = (e) => {\r\n        const twitchText = twitchTextArea.current.value;\r\n        const youtubeText = youtubeTextArea.current.value;\r\n\r\n        /* Twitch */\r\n        let arrTemp = twitchText.split(/\\r?\\n/);\r\n        const refinedTwitchData = removeOverlab(arrTemp)\r\n        const arrTwitch = parsingDatas(refinedTwitchData, 'twitch');\r\n        /* // Twitch */\r\n\r\n        /* Youtube */\r\n        let tempSplitArr = youtubeText.split(/\\r?\\n\\r?\\n/);        // 유튜브 댓글은 한줄로 안나와서 한줄로 만들어줘야함\r\n        tempSplitArr = tempSplitArr.map((data) => data.replace('\\n', ': '))      // 유튜브 댓글 아이디와 채팅 사이에 \\n이 들어가서 :로 바꿔주기\r\n        const refinedYoutubeData = removeOverlab(tempSplitArr)\r\n        const arrYoutube = parsingDatas(refinedYoutubeData, 'youtube');\r\n        /* // Youtube */\r\n\r\n        const arrResult = [...arrTwitch, ...arrYoutube]\r\n \r\n        setChattingText(arrResult)\r\n    }\r\n\r\n    return (\r\n        <div id=\"id_filter\">\r\n            <div className=\"top_menu\">\r\n                <label>검색어:</label>\r\n                <input type='text' />\r\n                <label>중복 제거</label>\r\n                <input type=\"checkbox\" />\r\n            </div>\r\n\r\n            <div className=\"content_box chatting\">\r\n                <div className=\"twitch_chatting_box\">\r\n                    <p>Twitch Chatting</p>\r\n                    <textarea onChange={onChangeTextArea} ref={twitchTextArea} value={a} />\r\n                </div>\r\n\r\n                <div className=\"youtube_chatting_box\">\r\n                    <p>Youtube Chatting</p>\r\n                    <textarea onChange={onChangeTextArea} ref={youtubeTextArea} value={b} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"content_box result\">\r\n                {\r\n                    chattingText.map((data) => {\r\n                        console.log(data);\r\n                        return (\r\n                            <>\r\n                                <span>{data.platform}</span>\r\n                                <span>{data.id}</span>\r\n                                <span>{data.msg}</span>\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IdFilter;\r\n"]},"metadata":{},"sourceType":"module"}